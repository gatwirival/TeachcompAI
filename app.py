import os
import streamlit as st
import google.generativeai as genai
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Get the Google API key from the environment variables or secrets
api_key = os.getenv("GOOGLE_API_KEY")

# Check if the API key is available
if not api_key:
    st.error("API Key not found. Please make sure to set the GOOGLE_API_KEY environment variable.")
    st.stop()

# Configure the Google Generative AI with the API key
genai.configure(api_key=api_key)

# Set the page configuration for the Streamlit app
st.set_page_config(
    page_title="Computer Skills Tutor",
    page_icon="💻"
)

# Set the title and caption for the Streamlit app
st.title("💻 Computer Skills Tutor")
st.caption("📚 A Streamlit app powered by Google Gemini to teach professionals basic computer skills")

# Sidebar with links
with st.sidebar:
    st.markdown("[Get a Google Gemini API key](https://ai.google.dev/)")
    st.markdown("[View the source code](https://github.com/gatwirival/TeachcompAI)")

# Helper function to generate tutorials
def generate_tutorial(skill_name, level, category):
    prompt = f"Create a {category} tutorial for {skill_name} for a {level} level professional."
    config = {
        "temperature": 0.8,
        "max_output_tokens": 2048,
    }
    model = genai.GenerativeModel("gemini-pro", generation_config=config)
    response = model.generate_content(prompt)
    return response.text if response else "Failed to generate tutorial."

# Create tabs for different skill categories
tab1, tab2, tab3 = st.tabs(["📝 Basic Office Skills", "🌐 Internet Skills", "🔧 Troubleshooting"])

# Code for Basic Office Skills
with tab1:
    st.write("📄 Learn Basic Office Skills")
    st.subheader("📝 Generate Office Skills Tutorials")

    skill_name = st.text_input("Enter the office skill you want to learn (e.g., Excel basics, Word formatting):", key="skill_name", value="Excel basics")
    level = st.selectbox("Select your proficiency level:", ["Beginner", "Intermediate", "Advanced"], key="level")

    if st.button("Generate Tutorial", key="generate_tutorial"):
        with st.spinner("Generating your tutorial using Gemini..."):
            tutorial = generate_tutorial(skill_name, level, "office skills")
            st.markdown("### Tutorial")
            st.write(tutorial)

# Code for Internet Skills
with tab2:
    st.write("🌐 Learn Internet Skills")
    st.subheader("🔍 Generate Internet Skills Tutorials")

    skill_name = st.text_input("Enter the internet skill you want to learn (e.g., safe browsing, effective searching):", key="internet_skill_name", value="safe browsing")
    level = st.selectbox("Select your proficiency level:", ["Beginner", "Intermediate", "Advanced"], key="internet_level")

    if st.button("Generate Tutorial", key="generate_internet_tutorial"):
        with st.spinner("Generating your tutorial using Gemini..."):
            tutorial = generate_tutorial(skill_name, level, "internet skills")
            st.markdown("### Tutorial")
            st.write(tutorial)

# Code for Troubleshooting
with tab3:
    st.write("🔧 Learn Troubleshooting Skills")
    st.subheader("🛠️ Generate Troubleshooting Tutorials")

    issue_name = st.text_input("Enter the issue you want to troubleshoot (e.g., computer won't start, slow internet):", key="issue_name", value="slow internet")
    level = st.selectbox("Select your proficiency level:", ["Beginner", "Intermediate", "Advanced"], key="troubleshoot_level")

    if st.button("Generate Troubleshooting Guide", key="generate_troubleshooting_guide"):
        with st.spinner("Generating your troubleshooting guide using Gemini..."):
            guide = generate_tutorial(issue_name, level, "troubleshooting")
            st.markdown("### Guide")
            st.write(guide)

# Disclaimer
st.markdown("---")
st.markdown("### Disclaimer")
st.markdown("""
This app is intended for educational purposes only. The content generated by the Google Gemini API is based on the information provided and is not guaranteed to be accurate or comprehensive.
Please use the tutorials and guides as a supplement to other learning resources.
The developers of this app are not responsible for any errors or omissions in the content generated.
""")
